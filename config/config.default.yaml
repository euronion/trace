# SPDX-FileCopyrightText: 2020-2022 Johannes Hampp
#
# SPDX-License-Identifier: GPL-3.0-or-later

logging:
  level: INFO

scenarios:
  default:   # All scenarios are based on this scenario and may overwrite the here specified parameters
        # WACC scenario assumptions, see "data/wacc.csv"
        # Currently supported: homogeneous, irena, inhomogeneous
    wacc: "homogeneous"

        # Import profile (time-series) for import demand.
        # Maybe any of the files in data/import_profiles/<import_profile>.csv or "buffered":
        # - constant: Constant import_profile (baseload) with hourly demand as specified in <ESC>/loads.csv
        # - night-60_day-100: Import profile with demand as specified in <ESC>/loads.csv, weighted with 60% during night time.
    import_profile: "constant"

        # Imports are by default not buffered, i.e. the import_profile must unconditionally be met
        # Alternatively an buffer may be added to the import location, such that the import demand
        # must only be met on a different time-scale. The buffer does not add additional costs.
        # Currently supported values:
        #  - False  : No buffering (default)
        #  - annually : Demand is buffered on an annual basis; import demand has to be met on an annual basis
    import_buffer: "annually"

    # Which demand data to use to determine available supplies
    # "custom" -> use "data/overwrite/demand.csv"
    synthetic_demand: "custom"


    # Set default marginal_cost and capital_cost for any component - generator, link, store -
    # if the cost is == 0
    # Should help to bring more stability into the model
    capital_cost:
      default: 0.1
    marginal_cost:
      default: 0.0

    # Modify certain aspects of the models, for sensitivity analysis
    # Modification factor in pu
    modifiers:
      wacc: 1
      import_demand: 1             # Related to network loads (= import demand)
      synthetic_demand: 1          # Amount of synthetic demand (domestic demand) used in supply curve reservation
      CAPEX_RES: 1                 # CAPEX of RES: PV, onshore and offshore wind
      CAPEX_battery: 1             # CAPEX of batteries and battery inverters
      CAPEX_electrolysis: 1        # CAPEX of electrolysis
      CAPEX_MeOHSynthesis: 1       # CAPEX related to methanol synthesis
      CAPEX_pipeline: 1            # CAPEX of pipeline and related technologies (H2 and CH4, submarine and onland, pipeline and pipeline compressors)

# Weather year for which ERA5 data is used
renewables:
  era5_year: 2013

  # Ignore renewable classes below this capacity [MW]
  # when create the supply curves and attaching RES to each network
  ignore_capacities_below: 5

  wind_onshore:

    # Part of the region to build in. Allowed values: ["onshore", "offshore"]
    # * "onshore" = region specified by GADM boundaries
    # * "offshore" = region specified as EEZ
    build_in: ["onshore"]

    # Offshore regions are automatically added for all countries of the region
    # based on the countries' EEZs, as long as the offshore regions are
    # adjacent to any of the onland regions and within a radius off
    # <max_shore_distance> m.
    #max_shore_distance: 1000

    # Copernicus Land Cover
    copernicus:
      # Areas with these landcover codes are considered eligible for the RES technology
      include_codes: [20, 30, 40, 60, 100, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 125, 126 # Open forest, unknown
      # 200,  # Open sea
]

      # A buffer zone with <distance_to_codes> m around the <distancing_codes> land cover
      # codes (types) is considered not eligible for the RES technology
      distancing_codes: [50]
      distance_to_codes: 1000

    # Maximum depth of a cell in the GEBCO map (relevant for offshore technologies)
    gebco:
      max_depth: 0
      max_altitude: 2000

      # Maximum slope (in %) allowed
      # calculated using richdem: https://richdem.readthedocs.io/en/latest/terrain_attributes.html
      # ("slope_percentage")
      max_slope: 30

    # World Database of Protected Areas
    wdpa:
      # PAs with one following statuses are included in the land availability analysis
      # (excluded from the eligible areas for building RES)
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]

      # Layers of the WDPA to consider.
      # Polygons represent the shape and location of a PA (accurate).
      # Points only represent an estimate location of the PA and the reported area of the PA
      # is then used in conjungtion with the estimate location to exclude an approximate area
      # of the PA (less accurate).
      # Some PAs are only reported as "points". If only "polygons" are selected, then those PAs
      # are not considered.
      layers: ["polygons", "points"]

    # World Database of Protected Marine Areas
    wdpa_marine:
      # MPAs with one following statuses are included in the land availability analysis
      # (excluded from the eligible areas for building RES)
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]

      # Same as the "layers" description for "wdpa"
      layers: ["polygons", "points"]

    # in MW/km^2
    # Based on ENPRESO non-floating offshore wind
    # http://data.europa.eu/89h/6d0774ec-4fe5-4ca3-8564-626f4927744e
    #technical_potential: 5
    # Estimate, based on large-scale wind deployment and ability of wind to regenerate momentum
    # over large areas
    technical_potential: 3

    # Number of quality classes into which RES layout is created based on annual capacity factor
    number_quality_classes: 50

    # Configuration used by atlite for modelling technology
    atlite:
      method: "wind"
      turbine: "Vestas_V112_3MW"

  wind_offshore:

    # Part of the region to build in. Allowed values: ["onshore", "offshore"]
    # * "onshore" = region specified by GADM boundaries
    # * "offshore" = region specified as EEZ
    build_in: ["offshore"]

    # Offshore regions are automatically added for all countries of the region
    # based on the countries' EEZs, as long as the offshore regions are
    # adjacent to any of the onland regions and within a radius off
    # <max_shore_distance> m.
    max_shore_distance: 50000

    # Copernicus Land Cover
    copernicus:
      # Areas with these landcover codes are considered eligible for the RES technology
      include_codes: [80, 200]

      # A buffer zone with <distance_to_codes> m around the <distancing_codes> land cover
      # codes (types) is considered not eligible for the RES technology
      distancing_codes: []
      distance_to_codes: 1000

    # Minimum/maximum elevation in m[etre] for a cell in the GEBCO map
    gebco:
      # Based on ENPRESO non-floating offshore wind
      # http://data.europa.eu/89h/6d0774ec-4fe5-4ca3-8564-626f4927744e
      max_depth: -60
      max_altitude: 2000

      # Slope restrictions not relevant offshore
      max_slope: false

    # World Database of Protected Areas
    wdpa:
      # PAs with one following statuses are included in the land availability analysis
      # (excluded from the eligible areas for building RES)
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]

      # Layers of the WDPA to consider.
      # Polygons represent the shape and location of a PA (accurate).
      # Points only represent an estimate location of the PA and the reported area of the PA
      # is then used in conjungtion with the estimate location to exclude an approximate area
      # of the PA (less accurate).
      # Some PAs are only reported as "points". If only "polygons" are selected, then those PAs
      # are not considered.
      layers: ["polygons", "points"]

    # World Database of Protected Marine Areas
    wdpa_marine:
      # MPAs with one following statuses are included in the land availability analysis
      # (excluded from the eligible areas for building RES)
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]

      # Same as the "layers" description for "wdpa"
      layers: ["polygons", "points"]

    # Global Shipping Travel Densities to consider
    shipping_routes:
      # Only consider areas with number of AIS contacts per hour below this threshold
      # (i.e. max. 400 AIS contacts per raster cell per hours; number of AIS contacts indicates ship activity)
      max_density_threshold: 400

    # in MW/km^2
    technical_potential: 3

    # Number of quality classes into which RES layout is created based on annual capacity factor
    number_quality_classes: 50

    # Configuration used by atlite for modelling technology
    atlite:
      method: "wind"
      turbine: "NREL_ReferenceTurbine_5MW_offshore"

  pvplant:
    build_in: ["onshore"]
    copernicus:
      include_codes: [20, 30, 40, 50, 60, 90, 100]
      distancing_codes: []
      distance_to_codes: 0
    wdpa:
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]
      layers: ["polygons", "points"]
    wdpa_marine:
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]
      layers: ["polygons", "points"]
    gebco:
      max_depth: false
      max_altitude: false
      max_slope: false
    technical_potential: 5.1 # Based on ENPRESO 85 W/m^2 and 3% land availability
    number_quality_classes: 50
    atlite:
      method: "pv"
      panel: "CSi"
      orientation: "latitude_optimal"

  csp_tower:
    build_in: ["onshore"]
    copernicus:
      include_codes: [20, 30, 40, 60, 90]
      distancing_codes: [50]
      # Murphy et al (2019), table 12 / pg. 89 .
      distance_to_codes: 3000
    wdpa:
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]
      layers: ["polygons", "points"]
    wdpa_marine:
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]
      layers: ["polygons", "points"]
    gebco:
      max_depth: false
      max_altitude: false
      # Slopy regions as not very suitable for CSP, see:
      # Murphy et al (2019), table 12 / pg. 89 .
      max_slope: 3
    technical_potential: 5.1 # Based on ENPRESO 85 W/m^2 and 3% land availability
    number_quality_classes: 50
    atlite:
      method: "csp"
      installation: "SAM_solar_tower"

    # Composition to CSP power plant to use for field, storage and power block
    # Used to estimate LCoE of CSP installation for determining supply curves.
    # Based on Baseline Tower Plant from NREL, Table 9 / pg. 79 in:
    # Murphy et al (2019): "The Potential Role of CSP within the Context of DOE's 2030 Solar Cost Targets"
    # URL: https://www.osti.gov/biblio/1491726/
    solar_multiple_estimate: 2.7

regions:
  # Region definitions rely on the GADM database (https://gadm.org)
  # Regions are identified by their full-name in the database
  # and may be of level 0 (country) or GADM levels 1 and 2.
  # "MA": ["Laâyoune - Boujdour - Sakia El Hamra", "Tan-Tan"] # Morocco
  "MA": ["Morocco"]
  "DE": ["Germany"]
  "DK": ["Denmark"]
  "ES": ["Spain"]
  "AU": ["Australia"]
  "AR": ["Argentina"]
  "EG": ["Egypt"]
  "SA": ["Saudi Arabia"]
  "RU": ["Russia"]
  "UA": ["Ukraine"]
  "KZ": ["Kazakhstan"]
  "DZ": ["Algeria"]
  "TN": ["Tunisia"]
  "NA": ["Namibia"]

detour_factors:
  transmission_line: 1.2
  pipeline: 1.4
  shipping: 1.

# Which technology-data version to use for cost assumptions
# May be either a branch (like e.g. "master") or a full-commit hash
# see: https://github.com/PyPSA/technology-data
technology_data: "master"

solver:
  pypsa-eur: # taken from : https://github.com/PyPSA/pypsa-eur/blob/master/config.default.yaml (works well)
    name: gurobi
    method: 2 # barrier
    crossover: 0
    BarConvTol: 1.e-5
    FeasibilityTol: 1.e-6
    AggFill: 0
    PreDual: 0
    GURO_PAR_BARDENSETHRESH: 200
    threads: 8
    seed: 10              # Consistent seed for all plattforms
  default:
    name: gurobi
    Presolve: 1           # Conservative presolving; Aggressive consumes too much memory
    BarHomogeneous: 1     # Use homogeneous barrier if standard does not converge
    PreDual: 2            # form primal and dual during presolve, heuristically choose
    method: 2             # barrier
    crossover: 0          # do not use crossover
    BarConvTol: 1.e-5
    FeasibilityTol: 1.e-5
    OptimalityTol: 1.e-5
    threads: 8
    seed: 10              # Consistent seed for all plattforms
  numeric-focus:
    name: gurobi
    NumericFocus: 3       # Favour numeric stability over speed
    method: 2             # barrier
    crossover: 0          # do not use crossover
    BarHomogeneous: 1     # Use homogeneous barrier if standard does not converge
    BarConvTol: 1.e-5
    FeasibilityTol: 1.e-4
    OptimalityTol: 1.e-4
    ObjScale: -0.5
    threads: 8
    seed: 10              # Consistent seed for all plattforms
  numeric-focus-scaled:
    name: gurobi
    NumericFocus: 3       # Favour numeric stability over speed
    method: 2             # barrier
    crossover: 0          # do not use crossover
    BarHomogeneous: 1     # Use homogeneous barrier if standard does not converge
    ScaleFlag: 3
    BarConvTol: 1.e-5
    FeasibilityTol: 1.e-4
    OptimalityTol: 1.e-4
    ObjScale: 100
    threads: 8
    seed: 10              # Consistent seed for all plattforms
  fallback:
        # Use gurobi defaults
    name: gurobi
    crossover: 0
    method: 2             # barrier
    BarHomogeneous: 1     # Use homogeneous barrier if standard does not converge
    BarConvTol: 1.e-5
    FeasibilityTol: 1.e-5
    OptimalityTol: 1.e-5
    seed: 10              # Consistent seed for all plattforms
    threads: 8
