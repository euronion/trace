# SPDX-FileCopyrightText: 2020-2022 Johannes Hampp
#
# SPDX-License-Identifier: GPL-3.0-or-later

# Change scenario here or by using the --config scenario=... command line flag
scenarios:
  sensitivity-1:
    modifiers:
      wacc: 0.8

  sensitivity-1p:
    modifiers:
      wacc: 1.2

  sensitivity-2:
    modifiers:
      load: 0.8

  sensitivity-2p:
    modifiers:
      load: 1.2

  sensitivity-3:
    modifiers:
      synthetic_demand: 0.8

  sensitivity-3p:
    modifiers:
      synthetic_demand: 1.2

  sensitivity-4:
    modifiers:
      CAPEX_RES: 0.8

  sensitivity-4p:
    modifiers:
      CAPEX_RES: 1.2

  sensitivity-5:
    modifiers:
      CAPEX_battery: 0.8

  sensitivity-5p:
    modifiers:
      CAPEX_battery: 1.2

  sensitivity-6:
    modifiers:
      CAPEX_electrolysis: 0.8

  sensitivity-6p:
    modifiers:
      CAPEX_electrolysis: 1.2

  sensitivity-7:
    modifiers:
      CAPEX_MeOHSynthesis: 0.8

  sensitivity-7p:
    modifiers:
      CAPEX_MeOHSynthesis: 1.2

  sensitivity-8:
    modifiers:
      CAPEX_pipeline: 0.8

  sensitivity-8p:
    modifiers:
      CAPEX_pipeline: 1.2

  lowhomogeneous:
    # WACC scenario assumptions, see "data/wacc.csv"
    # Currently supported: homogeneous, irena, inhomogeneous
    wacc: "lowhomogeneous"
  default:   # All scenarios are based on this scenario and may overwrite the here specified parameters
    # WACC scenario assumptions, see "data/wacc.csv"
    # Currently supported: homogeneous, irena, inhomogeneous
    wacc: "homogeneous"

    import_profile: "constant"
    import_buffer: "annually"

    # Synthetic electricity demand (local for the exporter) can either be automatically
    # generated using GEGIS or custom values provided via "data/overwrite/demand.csv" .
    synthetic_demand: gegis     # 'gegis' or 'custom'
    # Set default marginal_cost and capital_cost for any component - generator, link, store -
    # if the cost is == 0
    # Should help to bring more stability into the model
    capital_cost:
      default: 0.1
    marginal_cost:
      default: 0.0

    # Modify certain aspects of the models, for sensitivity analysis
    # Modification factor in pu
    modifiers:
      wacc: 1
      load_demand: 1               # Related to load (import demand)
      synthetic_demand: 1          # Amount of synthetic demand (domestic demand) used in supply curve reservation
      CAPEX_RES: 1                 # CAPEX of RES: PV, onshore and offshore wind
      CAPEX_battery: 1             # CAPEX of batteries and battery inverters
      CAPEX_electrolysis: 1        # CAPEX of electrolysis
      CAPEX_MeOHSynthesis: 1       # CAPEX related to methanol synthesis
      CAPEX_pipeline: 1            # CAPEX of pipeline and related technologies (H2 and CH4, submarine and onland, pipeline and pipeline compressors)

plotting:
  # DPI setting for exporting PNG figures
  dpi: 300
  # Prettier ESC names to use in plots
  esc_pretty_names:
    "hvdc-to-h2": "HVDC to H2"
    "pipeline-h2": "H2 pipeline"
    "shipping-lh2": "H2 (l) ship"
    "shipping-lohc": "LOHC ship"
    "pipeline-ch4": "CH4 pipeline"
    "pipeline-ch4-to-h2": "CH4 pipeline"
    "shipping-lch4": "CH4 (l) ship"
    "shipping-lch4-to-h2": "CH4 (l) ship"
    "shipping-meoh": "MeOH ship"
    "shipping-meoh-to-h2": "MeOH ship"
    "shipping-lnh3": "NH3 (l) ship"
    "shipping-lnh3-to-h2": "NH3 (l) ship"
    "shipping-ftfuel": "FTF ship"
  # matplotlib markers to use for ESCs in plots
  esc_markers:
    "hvdc-to-h2": "X"
    "pipeline-h2": "+"
    "shipping-lh2": "^"
    "shipping-lohc": "d"
    "pipeline-ch4": "*"
    "pipeline-ch4-to-h2": "*"
    "shipping-lch4": "v"
    "shipping-lch4-to-h2": "v"
    "shipping-meoh": ">"
    "shipping-meoh-to-h2": ">"
    "shipping-lnh3": "<"
    "shipping-lnh3-to-h2": "<"
    "shipping-ftfuel": "p"
  # matplotlib colors to use for different exporters in plots
  exporter_colors:
    "AR": "orange"
    "AU": "deepskyblue"
    "DE": "black"
    "DK": "deeppink"
    "EG": "red"
    "ES": "green"
    "MA": "blueviolet"
    "SA": "slategray"
